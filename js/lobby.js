// Generated by CoffeeScript 1.6.3
(function() {
  var LobbyApp, hashToRequestString;

  hashToRequestString = function(hash) {
    var k, pairs, v;
    pairs = (function() {
      var _results;
      _results = [];
      for (k in hash) {
        v = hash[k];
        _results.push(k + '=' + v);
      }
      return _results;
    })();
    return pairs.join('&');
  };

  LobbyApp = angular.module('LobbyApp', []);

  window.LobbyCtrl = function($scope) {
    var dispatchers, handlers, webSocket;
    $scope.$safeApply = function(fn) {
      var phase;
      phase = this.$root.$$phase;
      if (phase === '$apply' || phase === '$digest') {
        if (fn && (typeof fn === 'function')) {
          return fn();
        }
      } else {
        return this.$apply(fn);
      }
    };
    $scope.gameTypes = {};
    $scope.currentGameType = false;
    $scope.games = {};
    $scope.requestNewGame = function() {
      var gameName, userName, _ref;
      if (!$scope.currentGameType) {
        return;
      }
      userName = (_ref = $scope.userName) != null ? _ref : 'anonymous';
      gameName = prompt("Name your game:");
      if (gameName) {
        return webSocket.requestNewGame(userName, gameName);
      }
    };
    $scope.joinGame = function(gameId) {
      var userName, _ref;
      userName = (_ref = $scope.userName) != null ? _ref : 'anonymous';
      return window.location = "play.html?gameId=" + gameId + "&userName=" + userName;
    };
    $scope.stupid = function(gameId) {
      return console.log('stupid');
    };
    handlers = {
      error: function(msg) {
        return console.error(msg);
      },
      gameTypeList: function(msg) {
        return $scope.$apply(function() {
          var gameType, _i, _len, _ref, _results;
          $scope.gameTypes = {};
          _ref = msg.data;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            gameType = _ref[_i];
            _results.push($scope.gameTypes[gameType.id] = gameType);
          }
          return _results;
        });
      },
      lobbyUpdate: function(msg) {
        return $scope.$apply(function() {
          var game, _i, _len, _ref, _results;
          $scope.games = {};
          _ref = msg.gameList;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            game = _ref[_i];
            game.clientsHtml = game.clients.join('<br>');
            _results.push($scope.games[game.id] = game);
          }
          return _results;
        });
      },
      newGameReady: function(msg) {
        return $scope.$apply(function() {
          return $scope.joinGame(msg.gameId);
        });
      }
    };
    dispatchers = {
      enterLobby: function() {
        return {
          messageType: 'enterLobby'
        };
      },
      listGameTypes: function() {
        return {
          messageType: 'listGameTypes'
        };
      },
      requestNewGame: function(userName, gameName) {
        return {
          messageType: 'createGame',
          userName: $scope.userName,
          gameTypeId: $scope.currentGameType.id,
          gameName: gameName
        };
      },
      enterGame: function(userName, gameId) {
        return {
          messageType: 'enterGame',
          userName: userName,
          gameId: gameId
        };
      }
    };
    webSocket = window.initializeWebSocket(handlers, dispatchers);
    return webSocket.onopen = function() {
      webSocket.listGameTypes();
      return webSocket.enterLobby();
    };
  };

}).call(this);
